<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>第一个SpringBoot应用</title>
      <link href="/2022/02/25/Spring%20Boot/"/>
      <url>/2022/02/25/Spring%20Boot/</url>
      
        <content type="html"><![CDATA[<h1 id="第一个SpringBoot应用"><a href="#第一个SpringBoot应用" class="headerlink" title="第一个SpringBoot应用"></a>第一个SpringBoot应用</h1><blockquote><p>体验：基于Spring boot整合SpringMVC</p><p>Spring Boot应用需要依赖远程服务器进行创建</p><p>远程服务器：</p><ul><li>Spring官方提供: <a href="https://start.spring.io/">https://start.spring.io</a></li><li>aliyun提供: <a href="https://start.aliyun.com/">https://start.aliyun.com</a></li></ul></blockquote><h2 id="创建SpringBoot项目"><a href="#创建SpringBoot项目" class="headerlink" title="创建SpringBoot项目"></a>创建SpringBoot项目</h2><p><img src="C:\Users\YuSir\AppData\Roaming\Typora\typora-user-images\image-20220216141940231.png" alt="image-20220216141940231"></p><h3 id="SpringBoot项目结构"><a href="#SpringBoot项目结构" class="headerlink" title="SpringBoot项目结构"></a>SpringBoot项目结构</h3><p><img src="C:\Users\YuSir\AppData\Roaming\Typora\typora-user-images\image-20220216142358482.png" alt="image-20220216142358482"></p><h3 id="项目配置"><a href="#项目配置" class="headerlink" title="项目配置"></a>项目配置</h3><blockquote><p>SpringBoot帮助我们完成通用性的配置，但是像数据库连接地址、账号、密码都需要手动配置。</p></blockquote><ul><li><p>修改MySQL默认版本(选择性)</p></li><li><p>在SpringBoot主配置文件application.properties中配置数据源及路径</p><p><img src="C:\Users\YuSir\AppData\Roaming\Typora\typora-user-images\image-20220216143611876.png" alt="image-20220216143611876"></p></li><li><p>在SpringBoot启动类<code>@MapperScan</code>注解指定DAO接口的包名</p><p><img src="C:\Users\YuSir\AppData\Roaming\Typora\typora-user-images\image-20220216143921340.png" alt="image-20220216143921340"></p></li></ul><h2 id="启动SpringBoot项目"><a href="#启动SpringBoot项目" class="headerlink" title="启动SpringBoot项目"></a>启动SpringBoot项目</h2><blockquote><p>SpringBoot应用自带Tomact容器，无需进行额外的服务器配置，直接运行启动类即可。</p></blockquote><p><img src="C:\Users\YuSir\AppData\Roaming\Typora\typora-user-images\image-20220216144316662.png" alt="image-20220216144316662"></p><h2 id="SpringBoot整合JSP"><a href="#SpringBoot整合JSP" class="headerlink" title="SpringBoot整合JSP"></a>SpringBoot整合JSP</h2><blockquote><p>SpringBoot默认动态网页技术是Thymeleaf，并不支持JSP，如果想使用JSP必须通过手动整合来实现。</p></blockquote><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- JSP --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.tomcat.embed<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>tomcat-embed-jasper<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>10.1.0-M10<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- JSTL --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>javax.servlet.jsp.jstl<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jstl<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="创建JSP页面"><a href="#创建JSP页面" class="headerlink" title="创建JSP页面"></a>创建JSP页面</h3><ul><li><p>修改pom.xml文件打包方式为war包</p><p><img src="C:\Users\YuSir\AppData\Roaming\Typora\typora-user-images\image-20220216170708400.png" alt="image-20220216170708400"></p></li><li><p>在main中创建webapp目录</p></li><li><p>在webapp创建.jsp页面</p></li></ul><p><img src="C:\Users\YuSir\AppData\Roaming\Typora\typora-user-images\image-20220216170628490.png" alt="image-20220216170628490"></p><blockquote><p>如果把JSP页面放在WEB-INF文件夹里面,需要单独写一个PageController，来进行页面的转发。</p></blockquote><p><img src="C:\Users\YuSir\AppData\Roaming\Typora\typora-user-images\image-20220216171045651.png" alt="image-20220216171045651"></p><h2 id="基于SpringBoot的SSM整合"><a href="#基于SpringBoot的SSM整合" class="headerlink" title="基于SpringBoot的SSM整合"></a>基于SpringBoot的SSM整合</h2><ul><li><p>创建Spring Boot项目导入依赖：</p><ul><li>Lombok</li><li>SpringWeb</li><li>Mysql Driver</li><li>Mybatis Framework</li></ul></li><li><p>修改Mysql驱动版本</p></li><li><p>进行Mybatis所需的配置</p><ul><li><p>将默认创建的application.properties后缀名修改为<code>yml</code>（可选）</p></li><li><p>完成Mybatis的自定义配置</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">datasource:</span></span><br><span class="line">    <span class="attr">driver-class-name:</span> <span class="string">com.mysql.cj.jdbc.Driver</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">jdbc:mysql://localhost:3306/springboot_vue?characterEncoding=utf-8</span></span><br><span class="line">    <span class="attr">username:</span> <span class="string">root</span></span><br><span class="line">    <span class="attr">password:</span> <span class="string">root</span></span><br><span class="line">  <span class="attr">mvc:</span></span><br><span class="line">    <span class="attr">view:</span></span><br><span class="line">      <span class="attr">prefix:</span> <span class="string">/</span></span><br><span class="line">      <span class="attr">suffix:</span> <span class="string">.jsp</span></span><br><span class="line"></span><br><span class="line"><span class="attr">mybatis:</span></span><br><span class="line">  <span class="attr">mapper-locations:</span> <span class="string">classpath:mappers/*Mapper.xml</span></span><br><span class="line">  <span class="attr">type-aliases-package:</span> <span class="string">com.yuhao.springboot.demo.pojo</span></span><br></pre></td></tr></table></figure></li></ul></li><li><p>在启动类配置DAO扫描</p><ul><li><p><code>@MapperScan</code></p><p><img src="C:\Users\YuSir\AppData\Roaming\Typora\typora-user-images\image-20220216172806895.png" alt="image-20220216172806895"></p></li></ul></li></ul><h2 id="整合Druid连接池"><a href="#整合Druid连接池" class="headerlink" title="整合Druid连接池"></a>整合Druid连接池</h2><blockquote><p>在SpringBoot中整合Mybatis的时候，默认集成了Hikari连接池。Hikari效率比Druid要高，但是得益于Druid提供了比较便捷的监控系统，在实际的企业开发中，Druid使用的还是最多的。</p></blockquote><h3 id="添加Druid的Starter"><a href="#添加Druid的Starter" class="headerlink" title="添加Druid的Starter"></a>添加Druid的Starter</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>druid-spring-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.2.8<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="配置Druid数据源"><a href="#配置Druid数据源" class="headerlink" title="配置Druid数据源"></a>配置Druid数据源</h3><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 配置数据源</span></span><br><span class="line"><span class="string">spring.datasource.druid.driver-class-name=com.mysql.cj.jdbc.Driver</span></span><br><span class="line"><span class="string">spring.datasource.druid.url=jdbc:mysql://localhost:3306/springboot_vue?characterEncoding=utf-8</span></span><br><span class="line"><span class="string">spring.datasource.druid.username=root</span></span><br><span class="line"><span class="string">spring.datasource.druid.password=root</span></span><br><span class="line"><span class="comment">#初始化容器大小</span></span><br><span class="line"><span class="string">spring.datasource.druid.initial-size=1</span></span><br><span class="line"><span class="comment">#最小连接</span></span><br><span class="line"><span class="string">spring.datasource.druid.min-idle=1</span></span><br><span class="line"><span class="comment">#最大活跃连接数</span></span><br><span class="line"><span class="string">spring.datasource.druid.max-active=20</span></span><br></pre></td></tr></table></figure><h3 id="查看整合结果"><a href="#查看整合结果" class="headerlink" title="查看整合结果"></a>查看整合结果</h3><p><img src="C:\Users\YuSir\AppData\Roaming\Typora\typora-user-images\image-20220217154540654.png" alt="image-20220217154540654"></p><h2 id="Thymeleaf"><a href="#Thymeleaf" class="headerlink" title="Thymeleaf"></a>Thymeleaf</h2><blockquote><p>Thymeleaf是一种类似于JSP的动态网页技术</p></blockquote><h3 id="Thymeleaf简介"><a href="#Thymeleaf简介" class="headerlink" title="Thymeleaf简介"></a>Thymeleaf简介</h3><ul><li>JSP必须依赖于Tomact运行，不能直接运行在浏览器中</li><li>HTML可以直接运行在浏览器中，但是不能接收控制器传递的数据</li><li>Thymeleaf是一种既保留了HTML的后缀，能够直接在浏览器运行的能力、又实现了JSP显示动态数据的功能–即能查看页面效果，又能显示数据。</li></ul><h3 id="Thymeleaf的使用"><a href="#Thymeleaf的使用" class="headerlink" title="Thymeleaf的使用"></a>Thymeleaf的使用</h3><blockquote><p>SpringBoot应用对Thymeleaf提供了良好的支持</p></blockquote><h4 id="添加Thymeleaf的starter"><a href="#添加Thymeleaf的starter" class="headerlink" title="添加Thymeleaf的starter"></a>添加Thymeleaf的starter</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- thymeleaf --&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-thymeleaf<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.6.3<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="创建Thymeleaf模板"><a href="#创建Thymeleaf模板" class="headerlink" title="创建Thymeleaf模板"></a>创建Thymeleaf模板</h4><blockquote><p>Thymeleaf模板就是HTML文件</p></blockquote><ul><li>SpringBoot应用中，<code>resources\templates</code>目录就是用来存放页面模板的</li><li><code>重要说明</code>:<ul><li>static目录下的资源被定义为静态资源，SpringBoot应用默认放行。如果将HTML文件创建在static目录下，是可以直接访问的</li><li>templates目录下的文件，会被定义为动态网页模板，SpringBoot应用会拦截templates中定义的资源。如果将HTML定义在templates目录，则必须通过控制器跳转才能访问</li></ul></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">PageController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/test.html&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">test</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;test&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> SpringBoot </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>tkMapper</title>
      <link href="/2022/02/25/tkMapper/"/>
      <url>/2022/02/25/tkMapper/</url>
      
        <content type="html"><![CDATA[<h4 id="1-1-在项目开发过程中Dao层的实现的规律"><a href="#1-1-在项目开发过程中Dao层的实现的规律" class="headerlink" title="1.1 在项目开发过程中Dao层的实现的规律"></a>1.1 在项目开发过程中Dao层的实现的规律</h4><ul><li><p>所有的实体类与数据表存在对应关系，并且是有规律的（只要知道了数据表的的结构，就能够生成实体类）</p></li><li><p>所有实体的Dao接口中定义的方法也是有规律的，不同点就是实体类型不同</p><ul><li><p>UserDao</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">UserDao</span> <span class="keyword">extends</span> <span class="title">GeneralDao</span>&lt;<span class="title">User</span>&gt;</span>&#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>GoodsDao</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">GoodsDao</span> <span class="keyword">extends</span> <span class="title">GeneralDao</span>&lt;<span class="title">Goods</span>&gt;</span>&#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>GeneralDao</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">GeneralDao</span>&lt;<span class="title">T</span>&gt;</span>&#123;</span><br><span class="line">    <span class="comment">//通用方法</span></span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">insert</span><span class="params">(T t)</span></span>;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> T <span class="title">queryOnePrimaryKey</span><span class="params">(<span class="keyword">int</span> i)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul></li><li><p>对于<code>GeneralDao</code>接口定义的数据库操作方法因为使用了泛型，<code>无需映射文件</code>；对于<code>UserDao</code>和<code>GoodsDao</code>需要映射文件，所有Dao的相同操作的映射文件也是有规律可循的</p><ul><li><p>UserMapper</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">insert</span> <span class="attr">id</span>=<span class="string">&quot;insert&quot;</span>&gt;</span></span><br><span class="line">    insert into users(user_Id,user_name)values(#&#123;userId&#125;,#&#123;userName&#125;)</span><br><span class="line"><span class="tag">&lt;/<span class="name">insert</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Table(&quot;users&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">User</span></span>&#123;</span><br><span class="line">    </span><br><span class="line">    <span class="meta">@Id</span></span><br><span class="line">    <span class="meta">@Column(&quot;user_id&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> userId;</span><br><span class="line">    </span><br><span class="line">    <span class="meta">@Column(&quot;user_name&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String userName;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">String sql = <span class="string">&quot;&lt;insert id= &#x27;insert&#x27;&gt;insert into&quot;</span>;</span><br><span class="line"></span><br><span class="line">sql2 = <span class="string">&quot;(user_id,user_name</span></span><br><span class="line"><span class="string">sql3 = &quot;</span>values(#&#123;userId&#125;,#&#123;userName&#125;)<span class="string">&quot;</span></span><br><span class="line"><span class="string">    </span></span><br><span class="line"><span class="string">sql = sql + sql2 + sql3</span></span><br><span class="line"><span class="string">sql += &quot;</span>&lt;/insert&gt;<span class="string">&quot;</span></span><br></pre></td></tr></table></figure></li><li><p>GoodsMapper</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;insert id=<span class="string">&quot;insert&quot;</span>&gt;</span><br><span class="line">    <span class="function">insert into <span class="title">goods</span><span class="params">(goods_id,goods_name)</span><span class="title">values</span><span class="params">(#&#123;goodsId&#125;,#&#123;goodsName&#125;)</span></span></span><br><span class="line"><span class="function">&lt;/insert&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Table(&quot;goods&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Goods</span></span>&#123;</span><br><span class="line">    </span><br><span class="line">    <span class="meta">@Id</span></span><br><span class="line">    <span class="meta">@Column(&quot;goods_id&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> goodsId;</span><br><span class="line">    </span><br><span class="line">    <span class="meta">@Column(&quot;goods_name&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String goodsName;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul></li></ul><h4 id="1-2-tkMapper简介"><a href="#1-2-tkMapper简介" class="headerlink" title="1.2 tkMapper简介"></a>1.2 tkMapper简介</h4><hr><blockquote><p>基于Mybatis提供了很多第三方插件，这些插件通常可以完成通过数据操作方法的封装（GeneralDao）、数据库逆向工程的工作（根据数据表生成实体类、映射文件）。</p><ul><li>Mybatis-Plus</li><li>tkMapper</li></ul></blockquote><p>tkMapper就是一个Mybatis插件，是在Mybatis基础上提供了很多工具，让开发变得简单，提高开发效率。</p><ul><li>提供了针对单表的通用的数据库操作方法</li><li>逆向工程（根据数据库生成实体类、Dao接口、映射文件）</li></ul><h4 id="1-3-tkMapper整合"><a href="#1-3-tkMapper整合" class="headerlink" title="1.3 tkMapper整合"></a>1.3 tkMapper整合</h4><hr><h5 id="1-3-1-基于Spring-Boot完成Mybatis的整合"><a href="#1-3-1-基于Spring-Boot完成Mybatis的整合" class="headerlink" title="1.3.1 基于Spring Boot完成Mybatis的整合"></a>1.3.1 基于Spring Boot完成Mybatis的整合</h5><h5 id="1-3-2-整合tkMapper"><a href="#1-3-2-整合tkMapper" class="headerlink" title="1.3.2 整合tkMapper"></a>1.3.2 整合tkMapper</h5><h5 id="1-3-3-添加tkMapper的依赖"><a href="#1-3-3-添加tkMapper的依赖" class="headerlink" title="1.3.3 添加tkMapper的依赖"></a>1.3.3 添加tkMapper的依赖</h5><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- tkMapper --&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>tk.mybatis<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mapper-spring-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.1.5<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><p>1.3.4 修改启动类的<code>@MapperSace</code>注解的包为<code>import tk.mybatis.spring.annotation.MapperScan;</code></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.yuhao.springboot.demo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.SpringApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.autoconfigure.SpringBootApplication;</span><br><span class="line"><span class="keyword">import</span> tk.mybatis.spring.annotation.MapperScan;</span><br><span class="line"></span><br><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="meta">@MapperScan(&quot;com.yuhao.springboot.demo.dao&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SpringbootDemoApplication</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        SpringApplication.run(SpringbootDemoApplication.class, args);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="1-4-tkMapper的使用"><a href="#1-4-tkMapper的使用" class="headerlink" title="1.4 tkMapper的使用"></a>1.4 tkMapper的使用</h4><hr><h5 id="1-4-1-创建数据表"><a href="#1-4-1-创建数据表" class="headerlink" title="1.4.1 创建数据表"></a>1.4.1 创建数据表</h5><h5 id="1-4-2-创建实体类"><a href="#1-4-2-创建实体类" class="headerlink" title="1.4.2 创建实体类"></a>1.4.2 创建实体类</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="meta">@NoArgsConstructor</span></span><br><span class="line"><span class="meta">@AllArgsConstructor</span></span><br><span class="line"><span class="meta">@ToString</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">User</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> Integer id;</span><br><span class="line">    <span class="keyword">private</span> String username;</span><br><span class="line">    <span class="keyword">private</span> String password;</span><br><span class="line">    <span class="keyword">private</span> String nickName;</span><br><span class="line">    <span class="keyword">private</span> Integer age;</span><br><span class="line">    <span class="keyword">private</span> String sex;</span><br><span class="line">    <span class="keyword">private</span> String address;</span><br><span class="line">    <span class="keyword">private</span> String avatar;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="1-4-3-创建Dao接口"><a href="#1-4-3-创建Dao接口" class="headerlink" title="1.4.3 创建Dao接口"></a>1.4.3 创建Dao接口</h5><blockquote><p>tkMapper已经完成了对单表的通用操作的封装；封装在<code>Mapper</code>、<code>MysqlMapper</code>中；因此如果我们想要完成对单表的操作，只需自定义Dao接口继承<code>Mapper</code>、<code>MysqlMapper</code>即可。</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">UserDao</span> <span class="keyword">extends</span> <span class="title">Mapper</span>&lt;<span class="title">User</span>&gt;, <span class="title">MySqlMapper</span> </span>&#123;</span><br><span class="line">   </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="1-4-4-测试"><a href="#1-4-4-测试" class="headerlink" title="1.4.4 测试"></a>1.4.4 测试</h5>]]></content>
      
      
      
        <tags>
            
            <tag> tkMapper </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MarkDown 基本语法</title>
      <link href="/2022/02/04/Markdown%20%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95/"/>
      <url>/2022/02/04/Markdown%20%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<h2 id="总览"><a href="#总览" class="headerlink" title="总览"></a>总览</h2><p>几乎所有 Markdown 应用程序都支持 John Gruber 原始设计文档中列出的 Markdown 基本语法。但是，Markdown 处理程序之间存在着细微的变化和差异，我们都会尽可能标记出来。</p><h2 id="标题（Headings）"><a href="#标题（Headings）" class="headerlink" title="标题（Headings）"></a>标题（Headings）</h2><p>要创建标题，请在单词或短语前面添加井号 (<code>#</code>) 。井号的数量代表了标题的级别。例如，添加三个井号即创建一个三级标题 (<code>&lt;h3&gt;</code>) (例如：<code>### My Header</code>)。</p><table><thead><tr><th>Markdown</th><th>HTML</th><th>渲染效果</th></tr></thead><tbody><tr><td><code># Heading level 1</code></td><td><code>&lt;h1&gt;Heading level 1&lt;/h1&gt;</code></td><td># Heading level 1</td></tr><tr><td><code>## Heading level 2</code></td><td><code>&lt;h2&gt;Heading level 2&lt;/h2&gt;</code></td><td>## Heading level 2</td></tr><tr><td><code>### Heading level 3</code></td><td><code>&lt;h3&gt;Heading level 3&lt;/h3&gt;</code></td><td>### Heading level 3</td></tr><tr><td><code>#### Heading level 4</code></td><td><code>&lt;h4&gt;Heading level 4&lt;/h4&gt;</code></td><td>#### Heading level 4</td></tr><tr><td><code>##### Heading level 5</code></td><td><code>&lt;h5&gt;Heading level 5&lt;/h5&gt;</code></td><td>##### Heading level 5</td></tr><tr><td><code>###### Heading level 6</code></td><td><code>&lt;h6&gt;Heading level 6&lt;/h6&gt;</code></td><td>###### Heading level 6</td></tr></tbody></table><h3 id="标题（Heading）用法的最佳实践"><a href="#标题（Heading）用法的最佳实践" class="headerlink" title="标题（Heading）用法的最佳实践"></a>标题（Heading）用法的最佳实践</h3><p>当井号（<code>#</code>）和标题文本之间没有空格时，各 Markdown 应用程序的处理方式是不一样的。为了兼容考虑，请在井号和标题文本之间添加一个空格。</p><table><thead><tr><th align="center">✔&amp;nbsp;这样做</th><th align="center">❌&amp;nbsp;不要这样做</th></tr></thead><tbody><tr><td align="center"># Here’s a Heading</td><td align="center">#Here’s a Heading</td></tr></tbody></table><p>为了兼容性，您还应该在标题前后放置空行。</p><table><thead><tr><th>✅  Do this</th><th>❌  Don’t do this</th></tr></thead><tbody><tr><td><code>Try to put a blank line before...&lt;br&gt;&lt;br&gt;# Heading&lt;br&gt;&lt;br&gt;...and after a heading.</code></td><td><code>Without blank lines, this might not look right.&lt;br&gt;# Heading&lt;br&gt;Don&#39;t do this!</code></td></tr></tbody></table><h2 id="段落（Paragraphs）"><a href="#段落（Paragraphs）" class="headerlink" title="段落（Paragraphs）"></a>段落（Paragraphs）</h2><p>要创建段落，请使用空白行将一行或多行文本进行分隔。</p><table><thead><tr><th align="center">Markdown</th><th align="center">HTML</th><th align="center">渲染效果</th></tr></thead><tbody><tr><td align="center"><code>I really like using Markdown.&lt;br&gt;&lt;br&gt;I think I&#39;ll use it to format all of my documents from now on.</code></td><td align="center"><code>&lt;p&gt;I really like using Markdown.&lt;/p&gt;&lt;br&gt;&lt;br&gt;&lt;p&gt;I think I&#39;ll use it to format all of my documents from now on.&lt;/p&gt;</code></td><td align="center">I really like using Markdown.I think I’ll use it to format all of my documents from now on.</td></tr></tbody></table><h3 id="段落（Paragraph）用法的最佳实践"><a href="#段落（Paragraph）用法的最佳实践" class="headerlink" title="段落（Paragraph）用法的最佳实践"></a>段落（Paragraph）用法的最佳实践</h3><p>除非 <a href="https://www.markdown.xyz/basic-syntax/#paragraphs">段落在列表中</a>，否则不要用空格（spaces）或制表符（ tabs）缩进段落。</p><table><thead><tr><th>✅  这样做</th><th>❌  不要这样做</th></tr></thead><tbody><tr><td><code>Don&#39;t put tabs or spaces in front of your paragraphs.&lt;br&gt;&lt;br&gt;Keep lines left-aligned like this.&lt;br&gt;&lt;br&gt;</code></td><td><code>This can result in unexpected formatting problems.&lt;br&gt;&lt;br&gt;  Don&#39;t add tabs or spaces in front of paragraphs.</code></td></tr></tbody></table><h2 id="换行（Line-Breaks）"><a href="#换行（Line-Breaks）" class="headerlink" title="换行（Line Breaks）"></a>换行（Line Breaks）</h2><p>在一行的末尾添加两个或多个空格，然后按回车键（return），即可创建一个换行（line break）或新行 (<code>&lt;br&gt;</code>)。</p><table><thead><tr><th>Markdown</th><th>HTML</th><th>渲染效果</th></tr></thead><tbody><tr><td><code>This is the first line.  &lt;br&gt;And this is the second line.</code></td><td><code>&lt;p&gt;This is the first line.&lt;br&gt;&lt;br&gt;And this is the second line.&lt;/p&gt;</code></td><td>This is the first line.<br>And this is the second line.</td></tr></tbody></table><h3 id="换行（Line-Break）用法的最佳实践"><a href="#换行（Line-Break）用法的最佳实践" class="headerlink" title="换行（Line Break）用法的最佳实践"></a>换行（Line Break）用法的最佳实践</h3><p>几乎每个 Markdown 应用程序都支持两个或多个空格进行换行 (称为 “结尾空格（trailing whitespace）”) 的方式，但这是有争议的，因为很难在编辑器中直接看到空格，并且很多人在每个句子后面都会有意或无意地添加两个空格。由于这个原因，你可能需要使用除结尾空格以外的其它方式来进行换行。如果你所使用的 Markdown 应用程序 <a href="https://www.markdown.xyz/basic-syntax/#html">支持 HTML</a> 的话，你可以使用 HTML 的 <code>&lt;br&gt;</code> 标签来实现换行。</p><p>为了兼容性，请在行尾添加“结尾空格”或 HTML 的 <code>&lt;br&gt;</code> 标签来实现换行。</p><table><thead><tr><th>✅  这样做</th><th>❌  不要这样做</th></tr></thead><tbody><tr><td><code>First line with two spaces after.  &lt;br&gt;And the next line.&lt;br&gt;&lt;br&gt;First line with the HTML tag after.&lt;br&gt;&lt;br&gt;And the next line.&lt;br&gt;&lt;br&gt;</code></td><td><code>First line with a backslash after.\&lt;br&gt;And the next line.&lt;br&gt;&lt;br&gt;First line with nothing after.&lt;br&gt;And the next line.&lt;br&gt;</code></td></tr></tbody></table><h2 id="强调（Emphasis）"><a href="#强调（Emphasis）" class="headerlink" title="强调（Emphasis）"></a>强调（Emphasis）</h2><p>通过将文本设置为粗体或斜体来强调其重要性。</p><h2 id="粗体（Bold）"><a href="#粗体（Bold）" class="headerlink" title="粗体（Bold）"></a>粗体（Bold）</h2><p>要加粗文本，请在单词或短语的前后各添加两个星号（asterisks）或下划线（underscores）。如需加粗一个单词或短语的中间部分用以表示强调的话，请在要加粗部分的两侧各添加两个星号（asterisks）。</p><table><thead><tr><th>Markdown</th><th>HTML</th><th>渲染效果</th></tr></thead><tbody><tr><td><code>I just love **bold text**.</code></td><td><code>I just love &lt;strong&gt;bold text&lt;/strong&gt;.</code></td><td>I just love <strong>bold text</strong>.</td></tr><tr><td><code>I just love __bold text__.</code></td><td><code>I just love &lt;strong&gt;bold text&lt;/strong&gt;.</code></td><td>I just love <strong>bold text</strong>.</td></tr><tr><td><code>Love**is**bold</code></td><td><code>Love&lt;strong&gt;is&lt;/strong&gt;bold</code></td><td>Love<strong>is</strong>bold</td></tr></tbody></table><h3 id="粗体（Bold）用法最佳实践"><a href="#粗体（Bold）用法最佳实践" class="headerlink" title="粗体（Bold）用法最佳实践"></a>粗体（Bold）用法最佳实践</h3><p>Markdown 应用程序在如何处理单词或短语中间的下划线上并不一致。为兼容考虑，在单词或短语中间部分加粗的话，请使用星号（asterisks）。</p><table><thead><tr><th>✅  这样做</th><th>❌  不要这样做</th></tr></thead><tbody><tr><td><code>Love**is**bold</code></td><td><code>Love__is__bold</code></td></tr></tbody></table><h2 id="斜体（Italic）"><a href="#斜体（Italic）" class="headerlink" title="斜体（Italic）"></a>斜体（Italic）</h2><p>要用斜体显示文本，请在单词或短语前后添加一个星号（asterisk）或下划线（underscore）。要斜体突出单词的中间部分，请在字母前后各添加一个星号，中间不要带空格。</p><table><thead><tr><th>Markdown</th><th>HTML</th><th>渲染效果</th></tr></thead><tbody><tr><td><code>Italicized text is the *cat&#39;s meow*.</code></td><td><code>Italicized text is the &lt;em&gt;cat&#39;s meow&lt;/em&gt;.</code></td><td>Italicized text is the <em>cat’s meow</em>.</td></tr><tr><td><code>Italicized text is the _cat&#39;s meow_.</code></td><td><code>Italicized text is the &lt;em&gt;cat&#39;s meow&lt;/em&gt;.</code></td><td>Italicized text is the <em>cat’s meow</em>.</td></tr><tr><td><code>A*cat*meow</code></td><td><code>A&lt;em&gt;cat&lt;/em&gt;meow</code></td><td>A<em>cat</em>meow</td></tr></tbody></table><h3 id="斜体（Italic）用法的最佳实践"><a href="#斜体（Italic）用法的最佳实践" class="headerlink" title="斜体（Italic）用法的最佳实践"></a>斜体（Italic）用法的最佳实践</h3><p>Markdown 的众多应用程序在如何处理单词中间的下划线上意见不一致。为了兼容起见，请用星号标注单词中间的斜体来表示着重。</p><table><thead><tr><th>✅  这样做</th><th>❌  不要这样做</th></tr></thead><tbody><tr><td><code>A*cat*meow</code></td><td><code>A_cat_meow</code></td></tr></tbody></table><h2 id="粗体（Bold）和斜体（Italic）"><a href="#粗体（Bold）和斜体（Italic）" class="headerlink" title="粗体（Bold）和斜体（Italic）"></a>粗体（Bold）和斜体（Italic）</h2><p>要同时用粗体和斜体突出显示文本，请在单词或短语的前后各添加三个星号或下划线。要加粗并用斜体显示单词或短语的中间部分，请在要突出显示的部分前后各添加三个星号，中间不要带空格。</p><table><thead><tr><th>Markdown</th><th>HTML</th><th>渲染效果</th></tr></thead><tbody><tr><td><code>This text is ***really important***.</code></td><td><code>This text is &lt;strong&gt;&lt;em&gt;really important&lt;/em&gt;&lt;/strong&gt;.</code></td><td>This text is <em><strong>really important</strong></em>.</td></tr><tr><td><code>This text is ___really important___.</code></td><td><code>This text is &lt;strong&gt;&lt;em&gt;really important&lt;/em&gt;&lt;/strong&gt;.</code></td><td>This text is <em><strong>really important</strong></em>.</td></tr><tr><td><code>This text is __*really important*__.</code></td><td><code>This text is &lt;strong&gt;&lt;em&gt;really important&lt;/em&gt;&lt;/strong&gt;.</code></td><td>This text is <em><strong>really important</strong></em>.</td></tr><tr><td><code>This text is **_really important_**.</code></td><td><code>This text is &lt;strong&gt;&lt;em&gt;really important&lt;/em&gt;&lt;/strong&gt;.</code></td><td>This text is <em><strong>really important</strong></em>.</td></tr><tr><td><code>This is really***very***important text.</code></td><td><code>This is really&lt;strong&gt;&lt;em&gt;very&lt;/em&gt;&lt;/strong&gt;important text.</code></td><td>This is really<em><strong>very</strong></em>important text.</td></tr></tbody></table><h3 id="粗体（Bold）和斜体（Italic）用法的最佳实践"><a href="#粗体（Bold）和斜体（Italic）用法的最佳实践" class="headerlink" title="粗体（Bold）和斜体（Italic）用法的最佳实践"></a>粗体（Bold）和斜体（Italic）用法的最佳实践</h3><p>Markdown 应用程序在处理单词或短语中间添加的下划线上并不一致。为了实现兼容性，请使用星号将单词或短语的中间部分加粗并以斜体显示，以示重要。</p><table><thead><tr><th>✅  这样做</th><th>❌  不要这样做</th></tr></thead><tbody><tr><td><code>This is really***very***important text.</code></td><td><code>This is really___very___important text.</code></td></tr></tbody></table><h2 id="块引用（Blockquotes）"><a href="#块引用（Blockquotes）" class="headerlink" title="块引用（Blockquotes）"></a>块引用（Blockquotes）</h2><p>要创建块引用，请在段落前添加一个 <code>&gt;</code> 符号。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt; Dorothy followed her through many of the beautiful rooms in her castle.</span><br></pre></td></tr></table></figure><p>渲染效果如下所示：</p><blockquote>  <p>Dorothy followed her through many of the beautiful rooms in her castle.</p></blockquote><h3 id="多个段落的块引用（Blockquotes）"><a href="#多个段落的块引用（Blockquotes）" class="headerlink" title="多个段落的块引用（Blockquotes）"></a>多个段落的块引用（Blockquotes）</h3><p>块引用可以包含多个段落。为段落之间的空白行各添加一个 <code>&gt;</code> 符号</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&gt; Dorothy followed her through many of the beautiful rooms in her castle.</span><br><span class="line">&gt;</span><br><span class="line">&gt; The Witch bade her clean the pots and kettles and sweep the floor and keep the fire fed with wood.</span><br></pre></td></tr></table></figure><p>渲染效果如下：</p><blockquote>  <p>Dorothy followed her through many of the beautiful rooms in her castle.</p><p>The Witch bade her clean the pots and kettles and sweep the floor and keep the fire fed with wood.</p></blockquote><h3 id="嵌套块引用（Nested-Blockquotes）"><a href="#嵌套块引用（Nested-Blockquotes）" class="headerlink" title="嵌套块引用（Nested Blockquotes）"></a>嵌套块引用（Nested Blockquotes）</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&gt; Dorothy followed her through many of the beautiful rooms in her castle.</span><br><span class="line">&gt;</span><br><span class="line">&gt;&gt; The Witch bade her clean the pots and kettles and sweep the floor and keep the fire fed with wood.</span><br></pre></td></tr></table></figure><p>渲染效果如下：</p><blockquote>  <p>Dorothy followed her through many of the beautiful rooms in her castle.</p><blockquote>    <p>The Witch bade her clean the pots and kettles and sweep the floor and keep the fire fed with wood.</p>  </blockquote></blockquote><h3 id="带有其它元素的块引用（Blockquotes-with-Other-Elements）"><a href="#带有其它元素的块引用（Blockquotes-with-Other-Elements）" class="headerlink" title="带有其它元素的块引用（Blockquotes with Other Elements）"></a>带有其它元素的块引用（Blockquotes with Other Elements）</h3><p>块引用可以包含其他 Markdown 格式的元素。并非所有元素都可以使用，你需要进行实验以查看哪些元素有效。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&gt; #### The quarterly results look great!</span><br><span class="line">&gt;</span><br><span class="line">&gt; - Revenue was off the chart.</span><br><span class="line">&gt; - Profits were higher than ever.</span><br><span class="line">&gt;</span><br><span class="line">&gt;  *Everything* is going according to **plan**.</span><br></pre></td></tr></table></figure><p>渲染效果如下：</p><blockquote><h4 id="The-quarterly-results-look-great"><a href="#The-quarterly-results-look-great" class="headerlink" title="The quarterly results look great!"></a>The quarterly results look great!</h4><ul><li><p>Revenue was off the chart.</p></li><li><p>Profits were higher than ever.</p><p><em>Everything</em> is going according to <strong>plan</strong>.</p></li></ul></blockquote><h3 id="区块引号的最佳实践"><a href="#区块引号的最佳实践" class="headerlink" title="区块引号的最佳实践"></a>区块引号的最佳实践</h3><p>为了兼容性，在块引用之前和之后放置空行。</p><table><thead><tr><th>✅  Do this</th><th>❌  Don’t do this</th></tr></thead><tbody><tr><td><code>Try to put a blank line before...&lt;br&gt;&lt;br&gt;&gt; This is a blockquote&lt;br&gt;&lt;br&gt;...and after a blockquote.</code></td><td><code>Without blank lines, this might not look right.&lt;br&gt;&gt; This is a blockquote&lt;br&gt;Don&#39;t do this!</code></td></tr></tbody></table><h2 id="列表（Lists）"><a href="#列表（Lists）" class="headerlink" title="列表（Lists）"></a>列表（Lists）</h2><p>你可以将多个条目组织成有序或无序列表。</p><h3 id="有序列表（Ordered-Lists）"><a href="#有序列表（Ordered-Lists）" class="headerlink" title="有序列表（Ordered Lists）"></a>有序列表（Ordered Lists）</h3><p>要创建有序列表，请在每个列表项前添加数字并紧跟一个英文句点。数字不必按数学顺序排列，但是列表应当以数字 1 起始。</p><table><thead><tr><th align="center">Markdown</th><th align="center">HTML</th><th align="center">Rendered Output</th></tr></thead><tbody><tr><td align="center"><code>1. First item&lt;br&gt;2. Second item&lt;br&gt;3. Third item&lt;br&gt;4. Fourth item</code></td><td align="center"><code>&lt;ol&gt;&lt;br&gt;  &lt;li&gt;First item&lt;/li&gt;&lt;br&gt;  &lt;li&gt;Second item&lt;/li&gt;&lt;br&gt;  &lt;li&gt;Third item&lt;/li&gt;&lt;br&gt;  &lt;li&gt;Fourth item&lt;/li&gt;&lt;br&gt;&lt;/ol&gt;</code></td><td align="center">1. First item<br>2. Second item<br>3. Third item<br>4. Fourth item</td></tr><tr><td align="center"><code>1. First item&lt;br&gt;1. Second item&lt;br&gt;1. Third item&lt;br&gt;1. Fourth item</code></td><td align="center"><code>&lt;ol&gt;&lt;br&gt;  &lt;li&gt;First item&lt;/li&gt;&lt;br&gt;  &lt;li&gt;Second item&lt;/li&gt;&lt;br&gt;  &lt;li&gt;Third item&lt;/li&gt;&lt;br&gt;  &lt;li&gt;Fourth item&lt;/li&gt;&lt;br&gt;&lt;/ol&gt;</code></td><td align="center">1. First item<br>2. Second item<br>3. Third item<br>4. Fourth item</td></tr><tr><td align="center"><code>1. First item&lt;br&gt;8. Second item&lt;br&gt;3. Third item&lt;br&gt;5. Fourth item</code></td><td align="center"><code>&lt;ol&gt;&lt;br&gt;  &lt;li&gt;First item&lt;/li&gt;&lt;br&gt;  &lt;li&gt;Second item&lt;/li&gt;&lt;br&gt;  &lt;li&gt;Third item&lt;/li&gt;&lt;br&gt;  &lt;li&gt;Fourth item&lt;/li&gt;&lt;br&gt;&lt;/ol&gt;</code></td><td align="center">1. First item<br>2. Second item<br>3. Third item<br>4. Fourth item</td></tr><tr><td align="center"><code>1. First item&lt;br&gt;2. Second item&lt;br&gt;3. Third item&lt;br&gt;    1. Indented item&lt;br&gt;    2. Indented item&lt;br&gt;4. Fourth item</code></td><td align="center"><code>&lt;ol&gt;&lt;br&gt;  &lt;li&gt;First item&lt;/li&gt;&lt;br&gt;  &lt;li&gt;Second item&lt;/li&gt;&lt;br&gt;  &lt;li&gt;Third item&lt;br&gt;    &lt;ol&gt;&lt;br&gt;      &lt;li&gt;Indented item&lt;/li&gt;&lt;br&gt;      &lt;li&gt;Indented item&lt;/li&gt;&lt;br&gt;    &lt;/ol&gt;&lt;br&gt;  &lt;/li&gt;&lt;br&gt;  &lt;li&gt;Fourth item&lt;/li&gt;&lt;br&gt;&lt;/ol&gt;</code></td><td align="center">1. First item<br>2. Second item<br>3. Third item<br>  1. Indented item<br>  2. Indented item<br>4. Fourth item</td></tr></tbody></table><h3 id="有序列表（Ordered-List）用法的最佳实践"><a href="#有序列表（Ordered-List）用法的最佳实践" class="headerlink" title="有序列表（Ordered List）用法的最佳实践"></a>有序列表（Ordered List）用法的最佳实践</h3><p>CommonMark 和其它几种轻量级标记语言可以让你使用括号（<code>)</code>）作为分隔符（例如 <code>1) First item</code>），但并非所有的 Markdown 应用程序都支持此种用法，因此，从兼容的角度来看，此用法不推荐。为了兼容起见，请只使用英文句点作为分隔符。</p><table><thead><tr><th>✅  这样做</th><th>❌  不要这样做</th></tr></thead><tbody><tr><td><code>1. First item&lt;br&gt;2. Second item</code></td><td><code>1) First item&lt;br&gt;2) Second item</code></td></tr></tbody></table><h3 id="无序列表（Unordered-Lists）"><a href="#无序列表（Unordered-Lists）" class="headerlink" title="无序列表（Unordered Lists）"></a>无序列表（Unordered Lists）</h3><p>要创建无序列表，请在每个列表项前面添加破折号 (<code>-</code>)、星号 (<code>*</code>) 或加号 (<code>+</code>) 。缩进一个或多个列表项可创建嵌套列表。</p><table><thead><tr><th>Markdown</th><th>HTML</th><th>渲染效果</th></tr></thead><tbody><tr><td><code>- First item&lt;br&gt;- Second item&lt;br&gt;- Third item&lt;br&gt;- Fourth item</code></td><td><code>&lt;ul&gt;&lt;br&gt;  &lt;li&gt;First item&lt;/li&gt;&lt;br&gt;  &lt;li&gt;Second item&lt;/li&gt;&lt;br&gt;  &lt;li&gt;Third item&lt;/li&gt;&lt;br&gt;  &lt;li&gt;Fourth item&lt;/li&gt;&lt;br&gt;&lt;/ul&gt;</code></td><td>- First item<br>- Second item<br>- Third item<br>- Fourth item</td></tr><tr><td><code>* First item&lt;br&gt;* Second item&lt;br&gt;* Third item&lt;br&gt;* Fourth item</code></td><td><code>&lt;ul&gt;&lt;br&gt;  &lt;li&gt;First item&lt;/li&gt;&lt;br&gt;  &lt;li&gt;Second item&lt;/li&gt;&lt;br&gt;  &lt;li&gt;Third item&lt;/li&gt;&lt;br&gt;  &lt;li&gt;Fourth item&lt;/li&gt;&lt;br&gt;&lt;/ul&gt;</code></td><td>- First item<br>- Second item<br>- Third item<br>- Fourth item</td></tr><tr><td><code>+ First item&lt;br&gt;+ Second item&lt;br&gt;+ Third item&lt;br&gt;+ Fourth item</code></td><td><code>&lt;ul&gt;&lt;br&gt;  &lt;li&gt;First item&lt;/li&gt;&lt;br&gt;  &lt;li&gt;Second item&lt;/li&gt;&lt;br&gt;  &lt;li&gt;Third item&lt;/li&gt;&lt;br&gt;  &lt;li&gt;Fourth item&lt;/li&gt;&lt;br&gt;&lt;/ul&gt;</code></td><td>- First item<br>- Second item<br>- Third item<br>- Fourth item</td></tr><tr><td><code>- First item&lt;br&gt;- Second item&lt;br&gt;- Third item&lt;br&gt;    - Indented item&lt;br&gt;    - Indented item&lt;br&gt;- Fourth item</code></td><td><code>&lt;ul&gt;&lt;br&gt;  &lt;li&gt;First item&lt;/li&gt;&lt;br&gt;  &lt;li&gt;Second item&lt;/li&gt;&lt;br&gt;  &lt;li&gt;Third item&lt;br&gt;    &lt;ul&gt;&lt;br&gt;      &lt;li&gt;Indented item&lt;/li&gt;&lt;br&gt;      &lt;li&gt;Indented item&lt;/li&gt;&lt;br&gt;    &lt;/ul&gt;&lt;br&gt;  &lt;/li&gt;&lt;br&gt;  &lt;li&gt;Fourth item&lt;/li&gt;&lt;br&gt;&lt;/ul&gt;</code></td><td>- First item<br>- Second item<br>- Third item<br>  - Indented item<br>  - Indented item<br>- Fourth item</td></tr></tbody></table><h3 id="以数字开头的无序列表"><a href="#以数字开头的无序列表" class="headerlink" title="以数字开头的无序列表"></a>以数字开头的无序列表</h3><p>如果你需要以数字开头并且紧跟一个英文句号（也就是 <code>.</code>）的无序列表项，则可以使使用反斜线（<code>\</code>）来 <a href="https://www.markdown.xyz/basic-syntax/#escaping-characters">转义</a> 这个英文句号。</p><table><thead><tr><th>Markdown</th><th>HTML</th><th>Rendered Output</th></tr></thead><tbody><tr><td><code>- 1968\. A great year!&lt;br&gt;- I think 1969 was second best.</code></td><td><code>&lt;ul&gt;&lt;br&gt;  &lt;li&gt;1968. A great year!&lt;/li&gt;&lt;br&gt;  &lt;li&gt;I think 1969 was second best.&lt;/li&gt;&lt;br&gt;&lt;/ul&gt;</code></td><td>- 1968. A great year!<br>- I think 1969 was second best</td></tr></tbody></table><h2 id="链接（Links）"><a href="#链接（Links）" class="headerlink" title="链接（Links）"></a>链接（Links）</h2><p><a href="https://duckduckgo.com/">DuckDuckGo — 隐私保护，化繁为简。</a></p><h2 id="网址和电子邮件地址"><a href="#网址和电子邮件地址" class="headerlink" title="网址和电子邮件地址"></a>网址和电子邮件地址</h2><p>要将 URL 或电子邮件地址快速转换为链接，请将其括在尖括号中。</p><p><a href="mailto:&#x32;&#50;&#x37;&#57;&#57;&#x31;&#53;&#55;&#48;&#51;&#64;&#x71;&#113;&#46;&#99;&#x6f;&#x6d;">&#x32;&#50;&#x37;&#57;&#57;&#x31;&#53;&#55;&#48;&#51;&#64;&#x71;&#113;&#46;&#99;&#x6f;&#x6d;</a></p><h2 id="格式化链接"><a href="#格式化链接" class="headerlink" title="格式化链接"></a>格式化链接</h2><p>如需 <a href="https://www.markdown.xyz/basic-syntax/#emphasis">强调（emphasize）</a> 某个链接, 请在方括号前及圆括号后添加星号。要将链接表示为 <a href="https://www.markdown.xyz/basic-syntax/#code">代码（code）</a> ，请在方括号内添加反引号。</p><p><strong><a href="https://www.baidu.com/">百度</a></strong></p><h2 id="图片（Images）"><a href="#图片（Images）" class="headerlink" title="图片（Images）"></a>图片（Images）</h2><p>要添加图片，首先请添加感叹号（<code>!</code>），然后紧跟着是方括号，方括号中可添加替代文本（alt text，即图片显示失败后显示此文本），最后跟着圆括号，圆括号中添加图片资源的路径或 URL。你可以选择在圆括号中的 URL 之后添加标题（即 title 属性）。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">![The San Juan Mountains are beautiful!](/assets/images/san-juan-mountains.jpg &quot;San Juan Mountains&quot;)</span><br></pre></td></tr></table></figure><p>渲染效果如下：</p><p><img src="https://www.markdown.xyz/assets/images/san-juan-mountains.jpg" alt="The San Juan Mountains are beautiful!" title="San Juan Mountains"></p>]]></content>
      
      
      
        <tags>
            
            <tag> MarkDown </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2022/02/03/hello-world/"/>
      <url>/2022/02/03/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
